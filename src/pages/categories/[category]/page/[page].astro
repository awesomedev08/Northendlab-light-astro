---
import { Image } from "@astrojs/image/components";
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import Pagination from "@layouts/components/Pagination.astro";
import Post from "@layouts/partials/Post.astro";
import taxonomyFilter from "@lib/utils/taxonomyFilter";
import { getSinglePage } from "@lib/contentParser.astro";
import { sortByDate } from "@lib/utils/sortFunctions";
import { getTaxonomy } from "@lib/taxonomyParser.astro";
import { markdownify } from "@lib/utils/textConverter";
import { getEntryBySlug } from "astro:content";
import type { GetStaticPathsOptions } from "astro";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const { blog_folder, pagination } = config.settings;
  const allPosts = await getSinglePage(blog_folder);
  const sortByDatePosts = sortByDate(allPosts);

  const categories = await getTaxonomy(blog_folder, "categories");
  return categories.map((category) => {
    const filterByTags = taxonomyFilter(
      sortByDatePosts,
      "categories",
      category
    );
    return paginate(filterByTags, {
      params: { category: category || "" },
      pageSize: pagination,
    });
  });
};

const homepage = await getEntryBySlug("homepage", "index");
const { banner } = homepage.data;
const { page } = Astro.props;
const { category } = Astro.params;
---

<Base title={category}>
  <!-- Banner -->
  <section
    class="banner"
    style="background-image: url('/images/banner/banner-bg.svg')"
  >
    <div class="container">
      <div class="row">
        <div class="lg:col-6">
          {
            banner?.title && (
              <h1 set:html={markdownify(banner?.title)} class="h2 mb-8" />
            )
          }
        </div>
      </div>
      <div class="banner-illustration">
        {
          banner?.image && (
            <Image src={banner?.image} width={768} height={385} alt="" />
          )
        }
      </div>
    </div>
  </section>
  <!-- ./End Banner -->

  <div class="section">
    <div class="container">
      <div class="row px-3">
        <div class="mx-auto px-0 lg:col-8">
          <h1 class="h2 mb-8">
            Posts related to <span class="text-primary">{category}</span> category
          </h1>
          <div class="rounded px-9 py-12 shadow md:p-[60px]">
            {page.data.map((post: any) => <Post post={post} />)}
            <Pagination
              section={`categories/${category}`}
              currentPage={page.currentPage}
              totalPages={page.lastPage}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</Base>
